program bl00dz;
{$DEFINE SRL_USE_REMOTEINPUT}
{$I WaspLib/osr.simba}
{$DEFINE FORMS_V2}

begin
  Login.PlayerIndex := 0;
  Mouse.Speed := SRL.NormalRange(12, 22);
end;

type
  Altar = record
    Location, WalkTile: TPoint;
    UpText: String;
    Area: TBox;
end;

const
  BREAKAFTER  = 40;
  BREAKFOR    = 5;

var
  RSW: TRSWalker;
  Timer: TStopwatch;
  BloodAltar, DarkAltar: Altar;
  StartXP, CurrentXP, GainedXP, LostCount: Int32;
  State: String;
  MinesMidTile: TPoint := [2440, 1052];
  MineObstacleReturnTile: TPoint := [2436, 956];
  MineObstacleTile: TPoint := [2436, 968];
  MineObstacleWalkTile: TPoint := [2436, 980];
  BloodObstacleWalkTile: TPoint := [2356, 1052];
  BloodObstacleTile: TPoint := [2364, 1044];
  MINES: TBox := [2425, 1006, 2481, 1093];

procedure PauseTimer(Task: PBreakTask);
var T: PBreakTask;
begin
  Timer.Pause;
  T := Task;
end;

procedure ResumeTimer(Task: PBreakTask);
var T: PBreakTask;
begin
  Timer.Resume;
  T := Task;
end;

procedure PrintProgress();
begin
  ClearDebug();
  WriteLn('|------------------------------------|');
  WriteLn('| Time running   : ', SRL.MsToTime(GetTimeRunning, Time_Short));
  WriteLn('| Total XP       : ', GainedXP);
  WriteLn('| XP/Hour        : ', Round((GainedXP/((GetTimeRunning()/3600))), 2), ' K');
  WriteLn('| State          : ', State);
  WriteLn('| Gotten lost    : ', LostCount, ' times');
  WriteLn('| Failsafe timer : ', SRL.MsToTime((300000-Timer.ElapsedTime), Time_Short));
  WriteLn('| Next break     : ', Antiban.TimeUntilBreak(Antiban.Breaks[0]));
  WriteLn('|------------------------------------|');
end;

procedure KeyboardRotate();
var
  Arrow: Integer;
  Duration: Int64;
begin
  if SRL.Dice(50) then
    Arrow := $25
  else
    Arrow := $27;
  Duration := SRL.NormalRange(500, 1500);
  Keyboard.KeyDown(Arrow);
  Sleep(Duration);
  Keyboard.KeyUp(Arrow);
end;

procedure SetupAntiBan();
begin
  Antiban.Skills := [ERSSKILL.RUNECRAFTING, ERSSKILL.TOTAL];
  Antiban.AddTask(ONE_MINUTE  * 4,   @Antiban.RandomRightClick);
  Antiban.AddTask(ONE_SECOND  * 45,  @Mouse.RandomMovement);
  Antiban.AddTask(ONE_MINUTE  * 5,   @KeyboardRotate);
  Antiban.AddTask(ONE_MINUTE  * 15,  @Antiban.HoverSkills);
  Antiban.AddTask(ONE_MINUTE  * 4,   @Antiban.LoseFocus);
  Antiban.AddTask(ONE_MINUTE  * 6,   @Antiban.RandomRotate);
  Antiban.AddBreak(ONE_MINUTE * 5, ONE_SECOND*10, 0.2, 0);
  Antiban.AddBreak(BREAKAFTER * ONE_MINUTE, BREAKFOR * ONE_MINUTE);
  Antiban.AddBreak(12 * ONE_HOUR, 4 * ONE_HOUR);
  Antiban.OnStartBreak := @PauseTimer;
  Antiban.OnFinishBreak := @ResumeTimer;
end;

function GetState(): String;
var Pos: TPoint;
begin
  Pos := RSW.GetMyPos();

  if MINES.Contains(Pos) then
    if Inventory.ContainsItem('Dark essence block') then
      Exit('FRAGMENT')
    else if Inventory.IsFull() then
      Exit('TRAVEL_DARK')
    else
      Exit('MINE_ESS');

  if DarkAltar.Area.Contains(Pos) then
    if (Inventory.IsFull() and (not Inventory.ContainsItem('Dark essence block'))) then
      Exit('VENERATE')
    else if Inventory.ContainsItem('Dark essence block') then
      if Inventory.ContainsItem('Dark essence fragments') then
        Exit('TRAVEL_BLOOD')
      else
        Exit('RETURN_FROM_DARK');

  if BloodAltar.Area.Contains(Pos) then
    if Inventory.ContainsItem('Dark essence fragments') then
      Exit('CRAFT_RUNES')
    else if Inventory.ContainsItem('Dark essence block') then
      Exit('FRAGMENT')
    else
      Exit('RETURN_FROM_BLOOD');

  Exit('RECOVER');
end;

procedure InitiateScript();
begin
  RSW.Setup('world');
  SetupAntiBan();
  if not RSClient.IsLoggedIn() then
    Login.LoginPlayer();
  WaitUntil(RSClient.IsLoggedIn(), 100, 10000);
  StartXP := XPBar.Read();
  Timer.Start();
  DarkAltar.WalkTile := [2274, 936];
  DarkAltar.Location := [2258, 928];
  DarkAltar.UpText := 'Vener';
  DarkAltar.Area := [2241, 907, 2282, 951];
  BloodAltar.WalkTile := [2278, 1148];
  BloodAltar.Location := [2258, 1142];
  BloodAltar.UpText := 'Bind B';
  BloodAltar.Area := [2228, 1114, 2300, 1173];
end;

procedure TravelToDarkAltar();
var
  Pos: TPoint;
  Rect: TRectangle;
begin
  Pos := RSW.GetMyPos();

  if MINES.Contains(Pos) then
    begin
      RSW.WebWalk(MineObstacleWalkTile);
      Rect := RSW.GetTileMS(MineObstacleTile);
      Mouse.HumanMove(Rect.Mean());
      WaitEx(50, 25);
      if Mainscreen.IsUpText('Climb') then
        begin
          Mouse.Click(MOUSE_LEFT);
          WaitUntil((RSW.GetMyPos.Y < MineObstacleTile.Y), 250, 10000);
        end
      else
        Exit();
    end;

  RSW.WebWalk(DarkAltar.WalkTile);
end;

procedure Venerate();
var
  Rect: TRectangle;
  Bds: TBox;
begin
  Rect := RSW.GetTileMS(DarkAltar.Location);
  Bds := Rect.Bounds();
  Bds.LimitTo(Mainscreen.Bounds());
  Mouse.HumanMove(Bds.Middle());
  WaitEx(50, 25);
  if Mainscreen.IsUpText(DarkAltar.UpText) then
    begin
      Mouse.Click(MOUSE_LEFT);
      XPBar.WaitXP(5000);
      WaitEx(250, 125);
    end
  else
    KeyboardRotate();
end;

procedure ReturnFromDark();
var
  Pos: TPoint;
  Rect: TRectangle;
begin
  Pos := RSW.GetMyPos();

  if DarkAltar.Area.Contains(Pos) then
    begin
      RSW.WebWalk(MineObstacleReturnTile);
      Rect := RSW.GetTileMS(MineObstacleTile);
      Mouse.HumanMove(Rect.Mean());
      WaitEx(50, 25);
      if Mainscreen.IsUpText('Climb') then
        begin
          Mouse.Click(MOUSE_LEFT);
          WaitUntil((RSW.GetMyPos.Y > MineObstacleTile.Y), 250, 10000);
        end
      else
        Exit();
    end;

  RSW.WebWalk(MinesMidTile);
end;

procedure MineEssence();
var
  NorthRock: TPoint := [2448, 1030];
  SouthRock: TPoint := [2448, 1076];
  Rocks: TPointArray := [NorthRock, SouthRock];
  Rect: TRectangle;
  Bds: TBox;
  i: Int32;
begin
  for i := 0 to 1 do
    begin
      Rect := RSW.GetTileMS(Rocks[i]);
      Bds := Rect.Bounds().Expand(6);
      Bds.LimitTo(Mainscreen.Bounds());
      if (SRL.CountColor(CTS2(9277080, 11, 0.15, 0.22), Bds) > 1) then
        begin
          Mouse.HumanMove(Bds.Center());
          WaitEx(50, 25);
          if Mainscreen.IsUpText('Chip') then
            begin
              Mouse.Click(MOUSE_LEFT);
              Minimap.WaitMoving();
              WaitEx(525, 125);
              Mouse.HumanMove(RSW.GetTileMS(Rocks[i]).Mean());
              WaitUntil(((not Mainscreen.IsUpText('Chip') or (Inventory.IsFull()))), 250, 45000);
              Exit();
            end;
        end;
    end
  KeyboardRotate();
end;

procedure Fragment();
begin
  Inventory.Use('Chisel', 'Dark essence block');
  WaitUntil((not Inventory.ContainsItem('Dark essence block')), 250, 50000);
end;

procedure CraftRunes();
var
  Rect: TRectangle;
  Bds: TBox;
begin
  Rect := RSW.GetTileMS(BloodAltar.Location);
  Bds := Rect.Bounds();
  Bds.LimitTo(Mainscreen.Bounds());
  Mouse.HumanMove(Bds.Middle());
  WaitEx(50, 25);
  if Mainscreen.IsUpText(BloodAltar.UpText) then
    begin
      Mouse.Click(MOUSE_LEFT);
      XPBar.WaitXP(5000);
    end
  else
    KeyboardRotate();
end;

procedure Recover();
begin
  Inc(LostCount);
  RSW.WebWalk(DarkAltar.WalkTile);
end;

procedure ReturnFromBlood();
var
  Pos: TPoint;
  Rect: TRectangle;
begin
  Pos := RSW.GetMyPos();

  if BloodAltar.Area.Contains(Pos) then
    begin
      RSW.WebWalk(BloodObstacleWalkTile);
      Rect := RSW.GetTileMS(BloodObstacleTile);
      Mouse.HumanMove(Rect.Mean());
      WaitEx(50, 25);
      if Mainscreen.IsUpText('Climb') then
        begin
          Mouse.Click(MOUSE_LEFT);
          WaitEx(6250, 2500);
        end
      else
        Exit();
    end;

  RSW.WebWalk(MinesMidTile);
end;

procedure CalculateXP();
var t: Int32;
begin
  CurrentXP := XPBar.Read();
  t         := GainedXP;
  GainedXP  := CurrentXP - StartXP;
  if (GainedXP > t) then
    Timer.Reset();
  if (Timer.ElapsedTime > 300000) then
    TerminateScript('No Gained XP in 5 minutes!');
end;

begin
  InitiateScript();
  repeat
    begin
      Antiban.DoAntiban();
      if (not RSClient.IsLoggedIn()) then
        Login.LoginPlayer();
      CalculateXP();
      State := GetState();
      PrintProgress();
      case State of
        'MINE_ESS': MineEssence();
        'TRAVEL_DARK': TravelToDarkAltar();
        'RECOVER': Recover();
        'VENERATE': Venerate();
        'RETURN_FROM_DARK': ReturnFromDark();
        'FRAGMENT': Fragment();
        'TRAVEL_BLOOD': RSW.WebWalk(BloodAltar.WalkTile);
        'CRAFT_RUNES': CraftRunes();
        'RETURN_FROM_BLOOD': ReturnFromBlood();
        end;
      WaitEx(1150, 45);
    end;
  until false;
end.