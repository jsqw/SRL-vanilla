program findz;
{$DEFINE SRL_USE_REMOTEINPUT}
{$I WaspLib/osr.simba}
{$DEFINE FORMS_V2}

begin
  Login.PlayerIndex := 0;
end;

const
  BREAKAFTER  = 40;
  BREAKFOR    = 8;

var
  RSW          : TRSWalker;
  Timer        : TStopwatch;
  StartXP      : Int32;
  CurrentXP    : Int32;
  GainedXP     : Int32        := 0;
  State        : String;
  DropArray    : TRSItemArray := ['Broken arrow', 'Broken glass', 'Iron dagger',
                                  'Uncut jade', 'Bones', 'Bowl', 'Pot',
                                  'Bronze limbs', 'Wooden stock', 'Coal',
                                  'Tin ore', 'Copper ore', 'Mithril ore',
                                  'Big bones', 'Iron ore', 'Uncut opal'];
  DepositArray : TRSItemArray := ['Pottery', 'Jewellery', 'Old chipped vase',
                                  'Arrowheads'];


// A custom Keyboard version of Antiban.RandomRotate()
// Rotating with mouse3 doesn't work well with RuneLite
procedure KeyboardRotate();
var
  Arrow: Integer;
  Duration: Int64;
begin
  if SRL.Dice(50) then
    Arrow := $25
  else
    Arrow := $27;
  Duration := SRL.NormalRange(500, 1500);
  Keyboard.KeyDown(Arrow);
  Sleep(Duration);
  Keyboard.KeyUp(Arrow);
end;

procedure PauseTimer(Task: PBreakTask);
var T: PBreakTask;
begin
  Timer.Pause();
  T := Task;
end;

procedure ResumeTimer(Task: PBreakTask);
var T: PBreakTask;
begin
  Timer.Resume();
  T := Task;
end;

procedure CalculateXP();
var t: Int32;
begin
  CurrentXP := XPBar.Read();
  t         := GainedXP;
  GainedXP  := CurrentXP - StartXP;
  if GainedXP > t then Timer.Reset();
  if Timer.ElapsedTime() > 6000000 then TerminateScript('No Gained XP in 100 minutes!');
end;

procedure PrintProgress();
begin
  ClearDebug();
  CalculateXP();
  WriteLn('| ~ varrock museumfindcleaner ~ |');
  WriteLn('| ------------------------------|');
  WriteLn('| Time running   : ', SRL.MsToTime(GetTimeRunning, Time_Short));
  WriteLn('| Gained XP      : ', Round((GainedXP/1000), 2), ' K');
  WriteLn('| Failsafe timer : ', SRL.MsToTime((3000000-Timer.ElapsedTime), Time_Short));
  WriteLn('| Next break     : ', Antiban.TimeUntilBreak(Antiban.Breaks[0]));
  WriteLn('| ------------------------------|');
end;

function GetUncleanedFinds(): Boolean;
var
  Pile: TPoint := [8444, 2664];
  Rect: TRectangle;
  Box : TBox;
  Pt  : TPoint;
begin
  if Mainscreen.IsUpText('rocks') and SRL.Dice(90) then
    begin
      Mouse.Click(MOUSE_LEFT);
      Wait(25, 125);
      Exit(True);
    end;
  Rect := RSW.GetTileMS(Pile);
  Box  := Rect.Bounds().Expand(-6);
  Pt   := SRL.Rowp(Mouse.Position(), Box);
  Mouse.HumanMove(Pt);
  if not Mainscreen.IsUpText('rocks') then Exit(False)
  else
    begin
      Mouse.Click(MOUSE_LEFT);
      WaitUntil(Inventory.IsFull(), 666, 70000);
      Exit(True);
    end;
end;

function IsDepositInterfaceOpen(): Boolean;
var
  S: String := 'Finds placed in this crate can not be retrieved!';
  CS: String;
begin
  CS := Chat.GetChatTitle;
  Result := CS = S;
end;

function UseCleaningTable(): Boolean;
var
  Pile: TPoint := [8440, 2676];
  Rect: TRectangle;
  Box : TBox;
  Pt  : TPoint;
begin
  Rect := RSW.GetTileMS(Pile);
  Box  := Rect.Bounds();
  Pt   := SRL.Rowp(Mouse.Position(), Box);
  Mouse.HumanMove(Pt);
  if not Mainscreen.IsUpText('table') then Exit(False)
  else
    begin
      Mouse.Click(MOUSE_LEFT);
      WaitUntil(not Inventory.ContainsItem('Uncleaned find'), 666, 70000);
      Exit(True);
    end;
end;

function ClickStorageCrate(): Boolean;
var
  Loc : TPoint := [8456, 2680];
  Rect: TRectangle;
  Box : TBox;
  Pt  : TPoint;
begin
  Rect := RSW.GetTileMS(Loc);
  Box  := Rect.Bounds().Expand(-6);
  Pt   := SRL.Rowp(Mouse.Position(), Box);
  Mouse.HumanMove(Pt);
  if not Mainscreen.IsUpText('crate') then Exit(False)
  else
    begin
      Mouse.Click(MOUSE_LEFT);
      Wait(775, 2775);
      Exit(True);
    end;
end;

function ShouldDeposit(): Boolean;
var i: Int32;
begin
  i += Inventory.CountItem('Pottery');
  i += Inventory.CountItem('Jewellery');
  i += Inventory.CountItem('Old chipped vase');
  i += Inventory.CountItem('Arrowheads');
  Result := i > 8;
end;

procedure DropJunkItems();
var Slots : TIntegerArray;
begin
  Inventory.FindItems(DropArray, Slots);
  Inventory.ShiftDrop(DropArray, DROP_PATTERN_SNAKE);
end;

procedure SetupAntiBan();
begin
  Antiban.Skills := [ERSSKILL.TOTAL];
  Antiban.AddTask(ONE_MINUTE  * 4,   @Antiban.RandomRightClick);
  Antiban.AddTask(ONE_SECOND  * 45,  @Mouse.RandomMovement);
  Antiban.AddTask(ONE_MINUTE  * 5,   @KeyboardRotate);
  Antiban.AddTask(ONE_MINUTE  * 15,  @Antiban.HoverSkills);
  Antiban.AddTask(ONE_MINUTE  * 4,   @Antiban.LoseFocus);
  Antiban.AddBreak(ONE_MINUTE * 5, ONE_SECOND*10, 0.2, 0);
  Antiban.AddBreak(BREAKAFTER * ONE_MINUTE, BREAKFOR * ONE_MINUTE);
  Antiban.OnStartBreak := @PauseTimer;
  Antiban.OnFinishBreak := @ResumeTimer;
end;

procedure InitiateScript();
begin
  RSW.Setup('world');
  SRL.Setup();
  SetupAntiBan();
  if not RSClient.IsLoggedIn then Login.LoginPlayer;
  WaitUntil(RSClient.IsLoggedIn, 100, 10000);
  StartXP := XPBar.Read;
  Timer.Start();
end;

procedure DepositItems();
begin
  if IsDepositInterfaceOpen() then
    begin
      Chat.ClickOption('Yes, place all my finds in the crate.');
      WaitUntil(not Inventory.ContainsAny(DepositArray), 250, 22000);
    end
  else ClickStorageCrate();
end;

function GetState: String;
begin
  if Inventory.ContainsItem('Antique lamp') then Exit('USE_LAMP');
  if ShouldDeposit then Exit('DEPOSIT_ITEMS');
  if Inventory.ContainsAny(DropArray) then Exit('DROP_JUNK');
  if Inventory.ContainsItem('Uncleaned find') then
    begin
      if Inventory.IsFull() then Exit('CLEAN_FINDS')
    end;
  Exit('GET_UNIDS');
end;

procedure UseLamp();
// slayer  : 205, 203 | farming : 242, 203
// herblore: 275, 165 | hunter  : 348, 238
var
  SkillButton: TPoint := [205, 203];
  OkButton: TPoint := [260, 276];
begin
  SkillButton := [SkillButton.X + Random(-3, 3), SkillButton.Y + Random(-3, 3)];
  OkButton := [OkButton.X + Random(-3, 3), OkButton.Y + Random(-3, 3)];
  Inventory.ClickItem('Antique lamp');
  Wait(1250, 2500);
  Mouse.HumanMove(SkillButton);
  Wait(125, 250);
  Mouse.Click(MOUSE_LEFT);
  Wait(125, 250);
  Mouse.HumanMove(OkButton);
  Wait(125, 250);
  Mouse.Click(MOUSE_LEFT);
  Wait(2250, 2500);
end;

procedure CleanFinds();
begin
  if not RSClient.IsLoggedIn() then Login.LoginPlayer();
  Antiban.DoAntiban();
  State := GetState();
  PrintProgress();
  WriteLn('State: ', State);
  case State of
    'USE_LAMP'       : UseLamp();
    'DEPOSIT_ITEMS'  : DepositItems();
    'DROP_JUNK'      : DropJunkItems();
    'CLEAN_FINDS'    : UseCleaningTable();
    'GET_UNIDS'      : GetUncleanedFinds();
  end;
end;

begin
  InitiateScript();
  repeat
    begin
      CleanFinds();
      Wait(150, 350);
    end;
  until false;
end.
